Phase: WholeSentence
Input: Token DiagnosisAlmost Split
Options: control = appelt


/*  Explanation:
    a potential diagnosis spans an entire sentence
    and consists of 3 or more tokens.
*/


Rule: WholeSentenceDiagnosis
(
 {Split}
  ({DiagnosisAlmost}):match
 {Split}
)
-->
:match  {
  Long start = matchAnnots.firstNode().getOffset();
  Long end   = matchAnnots.lastNode().getOffset();
  AnnotationSet contained = inputAS.getContained(start, end);

  if (contained.get("Diagnosis").isEmpty())  {
    FeatureMap features = Factory.newFeatureMap();
    features.put("rule", "WholeSentenceDiagnosis");
    
    int tokens = inputAS.getContained(start, end).get("Token").size();
    features.put("tokens", tokens);

    String type = "NotDiagnosis";

    if (tokens > 2) {
      type = "Diagnosis";
    }

    try {
      outputAS.add(start, end, type, features);
    }
    catch (InvalidOffsetException e) {
      e.printStackTrace();
    }
  }
}
