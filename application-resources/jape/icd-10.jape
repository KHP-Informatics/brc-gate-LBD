Phase: DiagnosisType
Input: Split Token ClosedClass DiagnosisPrefix DiagnosisSuffix 
       DiagnosisWhole DiagnosisPart Punct
       SemicolonBlock
Options: control = appelt


Rule: DiagnosisWhole
Priority: 10
({DiagnosisWhole}):match
-->
:match.DiagnosisType = { rule = DiagnosisWhole }


Rule: DiagnosisPartsPrefixSuffix
Priority: 9
(
 (
  ({DiagnosisPrefix})+
  ({ClosedClass})*
  ({DiagnosisPart})
  (({ClosedClass}|{Punct, !Split})*
   {DiagnosisPart})*
  ({ClosedClass}|{Punct, !Split})*
  ({DiagnosisSuffix})+
 ):match
)
-->
:match.DiagnosisType = { rule = DiagnosisPartsPrefixSuffix }


Rule: DiagnosisPartsPrefix
Priority: 9
(
 (
  ({DiagnosisPrefix})+
  ({ClosedClass})*
  ({DiagnosisPart})
  (({ClosedClass}|{Punct, !Split})*
   {DiagnosisPart})*
  ({DiagnosisSuffix})*
 ):match
)
-->
:match.DiagnosisType = { rule = DiagnosisPartsPrefix }


Rule: DiagnosisPartsSuffix
Priority: 9
(
 (
  ({DiagnosisPrefix})*
  ({DiagnosisPart})
  (({ClosedClass}|{Punct, !Split})*
   {DiagnosisPart})*
  ({ClosedClass}|{Punct, !Split})*
  ({DiagnosisSuffix})+
 ):match
)
-->
:match.DiagnosisType = { rule = DiagnosisPartsSuffix }


Rule: DiagnosisPartsTwoMiddles
Priority: 9
(
 (
  ({DiagnosisPrefix})*
  ({DiagnosisPart})
  (({ClosedClass}|{Punct, !Split})*
   {DiagnosisPart})+
  ({DiagnosisSuffix})*
 ):match
)
-->
:match.DiagnosisType = { rule = DiagnosisPartsTwoMiddles }
